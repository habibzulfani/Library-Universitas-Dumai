version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: e-repository-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: e_repository_db
      MYSQL_USER: e_repositori
      MYSQL_PASSWORD: e_repositori
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - e-repository-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: e-repository-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=e-repository-mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_NAME=e_repository_db
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
      - BASE_URL=http://localhost:8080
      - DB_RETRY_INTERVAL=5
      - DB_MAX_RETRIES=10
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - e-repository-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: e-repository-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - e-repository-network

volumes:
  mysql_data:


networks:
  e-repository-network:
    driver: bridge
